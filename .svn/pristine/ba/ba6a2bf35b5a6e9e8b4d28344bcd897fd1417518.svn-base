var VERSION_URL = 'http://192.168.0.105:3000/version';
var TARGET = 'http://192.168.0.105:3000/android/ecp';

var app = {
    // Application Constructor
    initialize: function() {
        this.bindEvents();
    },
    // Bind Event Listeners
    //
    // Bind any events that are required on startup. Common events are:
    // 'load', 'deviceready', 'offline', and 'online'.
    bindEvents: function() {
        document.addEventListener('deviceready', this.onDeviceReady, false);
    },
    // deviceready Event Handler
    //
    // The scope of 'this' is the event. In order to call the 'receivedEvent'
    // function, we must explicitly call 'app.receivedEvent(...);'
    onDeviceReady: function() {
        app.receivedEvent('deviceready');
    },
    // Update DOM on a Received Event
    receivedEvent: function(id) {
        var parentElement = document.getElementById(id);
        var listeningElement = parentElement.querySelector('.listening');
        var receivedElement = parentElement.querySelector('.received');

        listeningElement.setAttribute('style', 'display:none;');
        receivedElement.setAttribute('style', 'display:block;');

        console.log('Received Event: ' + id);
    },

    getDeviceType: function () {
      cordova

    },

    getServerVersion: function () {
        $.get(VERSION_URL).then(function (info) {
            app.serverVersion = info.version;
            app.serverVersionDescription = info.description;
            app.downloadUrl = info.url;
            app.versionCompare();
        });
    },

    versionCompare: function () {
        if (!app.currentVersion || ! app.serverVersion) return;

        if (semver.gt(app.serverVersion, app.currentVersion)) {
          var detail = message;
          if (message instanceof Array) {
            detail = message.join('\n');
          }
          var text = '发现新版本 v' + serverVersion + '\n' + detail + '\n\n 是否更新？';
          if (!confirm(text)) return;
          getApk();
        }
    }
};

app.initialize();
